# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main", "develop", "feature-**" ]

  pull_request:
    branches: [ "main", "develop" ]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under=7.0
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Unit Test & Code Coverage
      run: |
        python -m coverage run --source=sonarqube  -m nose2 --verbosity=2
        python -m coverage xml
        python -m coverage report -m
        echo ::set-env name=VERSION::python3 setup.py --version
        echo ${{ env.VERSION }}
    # - name: Test with pytest
      # run: |
        # pytest
    - name: Analyze with SonarCloud
      # You can pin the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
      with:
        # Additional arguments for the sonarcloud scanner
        args:
          # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
          # mandatory
          -Dsonar.projectKey=peterdeames_sonarqube-client
          -Dsonar.organization=peterdeames
          -Dsonar.branch.name=${{ vars.GITHUB_REF_NAME }}
          -Dsonar.projectVersion=0.0.99
          -Dsonar.python.version=${{ matrix.python-version }}
          -Dsonar.scm.provider=git
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.bandit.reportPaths=bandit_report.xml
          -Dsonar.python.pylint.reportPath=pylint-report.txt